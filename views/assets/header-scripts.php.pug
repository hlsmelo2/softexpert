script.
    const mainObject = {
        getApiUrl(endpoint) {
            return location.origin + '/api/' + endpoint;
        },
        killLoader() {
            const loader = document.querySelector('div#loader');

            setTimeout(loader.parentElement.removeChild.bind(loader.parentElement, loader), 1000);
        },
        killForm() {
            return false;
        },
        isFilledArray(aArray) {
            return (
                aArray instanceof Array &&
                'concat' in aArray &&
                typeof(aArray) !== 'string' &&
                aArray.length > 0
            );
        },
        getRequestBody(bodyObject) {
            const formData = new FormData();

            Object.keys(bodyObject).forEach(function(key) {
                formData.append( key, bodyObject[key] );
            });

            return formData;
        },
        sendRequest(url, method, options) {
            const newOptions = { method };
            options = (options === undefined) ? {} : options;

            if (options.body !== undefined) {
                newOptions.body = this.getRequestBody(options.body);
                delete(options.body);
            }

            if (sessionStorage.getItem('session') !== null) {
                options.headers = Object.assign(
                    {},
                    options.headers,
                    { 'Authorization' : 'Bearer ' + sessionStorage.getItem('session') }, 
                );
            }

            if (options.headers !== undefined) {
                options.headers = new Headers(options.headers);
            }

            Object.assign(newOptions, options);

            return fetch(url, newOptions);
        },
        getTextRequest(url, method, options) {
            return this.sendRequest(url, method, options)
                .then(function(response) { return response.text(); })
                .then(function(text) { return text; });
        },
        getJSONRequest(url, method, options) {
            return this.sendRequest(url, method, options)
                .then(function(response) { return response.json(); })
                .then(function(json) { return json; });
        },
    };
    
style.
    * {
        margin: 0;
        padding: 0;
    }

    h1, h2 { text-align: center; }
    div.line { margin-bottom: 10px; }

    h1#logo {        
        background: url("/public/assets/images/soft-expert.gif") no-repeat 0 0 /100% 100%;
        height: 76px;
        width: 340px;
        font-size: 0;
        margin: 26px auto 30px;
    }
        
    main { width: 80%; }
    nav#main-menu { display: table; }
    
    span.warning {
        text-align: center;
        display: block;
        width: 50%;
        margin: 0 auto;
    }

    .card-style {
        margin: 20px 10px 80px;
        box-shadow: 0px 0px 4px #00000052;
        padding: 20px 10px 40px;
    }

    div#list {
        height: 300px;
        overflow-y: auto;
    }

    main,
    nav#main-menu,
    section#home,
    section[id*="register"],
    section[id*="register"] table,
    section[id*="register"] form { margin: 0 auto; }

    .wrapper-1,
    .wrapper-2{
        width: 60%;
        margin: 0 auto;
    }

    .wrapper-2{ width: 56%; }

    section[id*="register"] h1 { text-align: center; }

    section[id*="register"] table {
        margin-bottom: 30px;
        height: 200px;
        overflow-y: auto;
    }

    section[id*="register"] table th,
    section[id*="register"] table td { padding: 10px; } 
